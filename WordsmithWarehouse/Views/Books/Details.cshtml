@model WordsmithWarehouse.Models.DetailsBookViewModel

@{
    ViewData["Title"] = "Details";
}

<input asp-for="User.ImageURL" type="hidden" />

<div id="bookInfo" class="showBookInformation">
    <div class="row" style="padding-top: 60px">
        <div class="col-md-5 col-sm-12">
            <div class="detailsImage">
                <img src="@Url.Content(Model.ImageURL)" class="detailsImage" alt="Image" />
            </div>
            <div class="row justify-content-center">
                <div class="col-5">
                    <div class="row">
                        <p>
                            @Html.DisplayNameFor(model => model.IsAvailableOnline) @Html.DisplayFor(model => model.IsAvailableOnline)
                        </p>
                    </div>
                    <div class="row">
                        <p>
                            @Html.DisplayNameFor(model => model.IsAvailablePhysical) @Html.DisplayFor(model => model.IsAvailablePhysical)
                        </p>
                    </div>
                    @if (this.User.Identity.IsAuthenticated)
                    {

                        <form enctype="multipart/form-data">
                            <input type="hidden" asp-for="Id" />

                            <div class="row justify-content-center">
                                <button type="submit" asp-controller="Leases" asp-action="Create" id="reserveButton" class="btn btn-dark" style="width:100%">
                                    Lease
                                </button>
                            </div>
                        </form>
                        if (string.IsNullOrEmpty(Model.BookFileUrl))
                        {
                            <div class="row justify-content-center">
                                <button style="width:100%" disabled class="btn btn-info"><a style="color:white" target="_blank" href="@Url.Content(Model.BookFileUrl)">Book is not Available Online </a></button>
                            </div>
                        }
                        else
                        {
                            <div class="row justify-content-center">
                                <button style="width:100%" class="btn btn-info"><a style="color:white" target="_blank" href="@Url.Content(Model.BookFileUrl)">Read Book</a></button>
                            </div>
                        }
                        <div class="row justify-content-center">
                            <button style="width:100%" class="btn btn-success" type="button" data-toggle="modal" data-target="#shelfModal">Add To Shelf</button>
                        </div>
                    }
                    <br />
                    @if (this.User.IsInRole("Admin") || this.User.IsInRole("Employee"))
                    {
                        <div class="row justify-content-between">
                            <a asp-controller="Books" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning"><i class="far fa-edit"></i>Edit</a>
                            <a asp-controller="Books" asp-action="Index" class="btn btn-info"><i class="fas fa-chevron-left"></i> Back to List</a>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-7">
            <h1 class="col-12">
                @Html.DisplayFor(model => model.Title)
            </h1>
            <hr />
            <div class="row">
                <div class="col-3">
                    <a href="#" v-on:click="onAuthorClick(@Model.AuthorId)" style="color: black">
                        <p class="col-10">
                            <i class="fas fa-feather-alt"></i> @Html.DisplayFor(model => model.Author.Name)
                        </p>
                    </a>
                </div>
                <div class="col-3">
                    <p>
                        <i class="fab fa-product-hunt"></i> @Html.DisplayFor(model => model.Publisher)
                    </p>
                </div>
                <div class="col-3">
                    <p>
                        <i class="far fa-calendar-alt"></i> @Html.DisplayFor(model => model.ReleaseYear)
                    </p>
                </div>
                <div class="col-3">
                    <p>
                        <i class="fas fa-book-open"></i> @Html.DisplayFor(model => model.Pages) pages
                    </p>
                </div>
            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-3">
                    <p class="col-10">
                        <b>ISBN:</b> @Html.DisplayFor(model => model.ISBN)
                    </p>
                </div>
                <div class="col-3">
                    <p>
                        <i class="fas fa-comments"></i> @Html.DisplayFor(mdeol => Model.TotalReviews)
                    </p>
                </div>
                <div class="col-3">
                    <p>
                        @Html.DisplayFor(model => model.AverageRatings) <i class="fas fa-star" style="color: #ffe642;"></i>
                    </p>
                </div>
                <div class="col-3">
                    <p>
                        <b>Cover type:</b> @Html.DisplayFor(model => model.CoverType)
                    </p>
                </div>
            </div>
            <br />
            <br>
            <div class="col-12">
                @if (Model.Tags.Count > 0)
                {
                    string tags = "";
                    for (int i = 0; i < Model.Tags.Count; i++)
                    {
                        if (!Model.Tags[i].isAdmin)
                        {
                            tags += Model.Tags[i].Name + " | ";
                        }
                    }
                    <p>
                        <b>
                            Categories:
                        </b>
                    </p>
                    <hr class="col-12" />
                    <p>
                        @tags
                    </p>
                }
                else
                {
                    <p>
                        n/a
                    </p>
                }
            </div>
            <br />
            <br />
            <div class="col-10">
                <p>
                    <b>Synopsis:</b>
                    <br />
                    <br />
                    <cite>
                        <i class="fas fa-quote-left fa-xs"></i> @Html.DisplayFor(model => model.Synopsis) <i class="fas fa-quote-right fa-xs"></i>
                    </cite>
                </p>
            </div>
        </div>
    </div>
</div>
@*--------------------Modal for Shelves----------------------*@
@if (this.User.Identity.IsAuthenticated)
{
    <div id="shelfModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4> Add to Shelf </h4>
                </div>
                <div class="modal-body">
                    @foreach (var shelf in Model.Shelves)
                    {
                        if (string.IsNullOrEmpty(shelf.BookIds))
                        {
                            shelf.BookIds = "";
                        }
                        string[] stringSplit = shelf.BookIds.Split(',');

                        if (stringSplit.Contains(Model.Id.ToString()))
                        {
                            <div>
                                <input type="checkbox" value="@shelf.Id" id="@shelf.Name" onchange="addToShelf(this)" checked /> @shelf.Name
                            </div>
                        }
                        else
                        {
                            <div>
                                <input type="checkbox" value="@shelf.Id" id="@shelf.Name" onchange="addToShelf(this)" /> @shelf.Name
                            </div>
                        }
                    }
                </div>
                <hr />
            </div>
        </div>
    </div>
}


@*----------------------------------------------------------CommentSection------------------------------------------------*@
<hr />
<div id="commentSection">
    @if (this.User.Identity.IsAuthenticated)
    {
        if (!Model.hasComment)
        {
            <div class="row">
                <post-template></post-template>
            </div>
            <hr />
        }
    }
    <div class="row" v-for="i in comments" style="margin-bottom:70px; margin-left:25px">
        <div class="row">
            <div class="col">
                @*image*@
                <img :src="getUserImage(i.userImage)" style="width:75px; height:75px; border-radius:100%" id="imageSource" />
                <div style="padding-top:10px; padding-left:11px" v-if="verifyButtons(i.userIdString)">
                    <div class="row">
                        <button type="button" style="background-color:transparent; outline-color:transparent" class="btn btn-light"><i class="far fa-edit" style="color: #3e4274;"></i></button>
                        <button type="button" style="background-color:transparent; outline-color:transparent" class="btn btn-light"><i class="far fa-minus-square" style="color: #d21414;"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div style="text-align: left; max-width:800px">
            @*name/date/rating*@
            <h5>{{i.name}}</h5>
            <h6 :title="getHours(i.dateCreated)">{{getSimplifiedTime(i.dateCreated)}}</h6>
            <h6> Rating: {{i.rating}}/10</h6>
            <p><cite>"{{i.text}}"</cite></p>
        </div>
    </div>
</div>
@if (this.User.Identity.IsAuthenticated)
{
    <template id="post-template">
        <div class="row" style="align-content:start; padding-left:45px">
            <div>
                <div class="col" style="text-align: left">
                    @*name/date*@
                    <h5 v-model="name">@this.User.Identity.Name</h5>
                </div>
                <div class="col-2">
                    @*image*@
                    <img src="@Url.Content(Model.User.ImageURL)" style="width:75px; max-height:75px; border-radius:100%" />
                </div>
            </div>
            <form asp-action="Details" style="width:700px">
                <input type="hidden" asp-for="Id" />
                <div class="row">
                    <div class="col-10">
                        @*comment*@
                        <textarea asp-for="CurrentUserComment" class="form-control" rows="5" id="comment"></textarea>
                        <div>
                            <button class="btn btn-outline-warning" type="button" v-on:click="clearComment()" style="border-radius:15px">Cancel</button>
                            <button class="btn btn-light" style="border-radius:15px" type="submit">Post</button>
                        </div>
                    </div>
                    <div class="col-2" style="padding-left:15px; padding-top:30px">
                        <h4>Rating</h4>
                        <input type="number" asp-for="CurrentUserCommentRating" class="noArrowNumInput" min="0" max="10" style="width: 30px; max-height:20px;" /> /10
                        <span asp-validation-for="CurrentUserComment" class="text-danger"></span>
                    </div>
                </div>
            </form>
        </div>
    </template>

    <template id="shelf-checkmark">
        <input type="checkbox" v-model="ticked" />
    </template>
}

@section scripts{

    @if (this.User.Identity.IsAuthenticated)
    {
        @Html.Hidden("userId", Model.User.Id)
        ;
        @Html.Hidden("bookId", Model.Id)
        ;
    }
    @Html.Hidden("authorId", Model.AuthorId);
    <script>
        var commentData = @Html.Raw(Json.Serialize(Model.Comments));
        var userData = @Html.Raw(Json.Serialize(Model.Users));
        var shelfData = @Html.Raw(Json.Serialize(Model.Shelves));
    </script>
    <script>
        function addToShelf(el) {
            console.log(el);

            if (el.checked) {
                let item = {
                    shelfId: $(el).val(),
                    bookId: @Model.Id
                                                }
                console.log(item);
                $.ajax({
                    url: "/Shelves/AddToShelf",
                    type: "POST",
                    data: item,
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            } else {
                let item = {
                    shelfId: $(el).val(),
                    bookId: @Model.Id
                                                }

                console.log(item);
                $.ajax({
                    url: "/Shelves/RemoveFromShelf",
                    type: "POST",
                    data: item,
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            }

        }
    </script>
    <script src="~/js/CommentSection.js"></script>
    <script src="~/js/bookinfo.js"></script>
}

