@model BookStockViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<div id="bookStock">


    <h2 class="text-center"> Total Stock: @Model.Book.TotalStock</h2>
    <div class="grid-container" style="grid-template-rows:50%">
        @foreach (var item in Model.Libraries)
        {
            <div class="col" >
                <h3>@item.Name</h3>
                <input type="number" class="libInput" value="@Model.quantities.Where(q => q.BookId == Model.Book.Id && q.LibraryId == item.Id).FirstOrDefault().TotalStock"/>
            </div>
        }
            
    </div>

    <button type="submit" onclick="SendStockInfo()">Test</button>
</div>

@section scripts{
    <script>
        var libraryData = @Html.Raw(Json.Serialize(Model.Libraries));
    </script>

    <script src="~/js/bookstock.js"></script>
}
<script>
    function SendStockInfo(){
        var inputs = document.getElementsByClassName("libInput");
        var vals = [];
        for (let i = 0; i < inputs.length; i++){

            if(inputs[i].value >= 0 && inputs[i].value !== null && inputs[i].value === ''){
                vals.push('0');
            }else{
                vals.push(inputs[i].value);
            }
        }

        let item = {
            values : vals,
            bookId : @Model.Id,
        }

        $.ajax({
            url: "/Books/GetBookStock",
            type: "POST",
            data: item,
            success: function(response){
                console.log(response);
            },
            error: function(request, status, error){
                console.log(request.responseText);
            }
        });

        window.location.assign(`/books/edit/${@Model.Id}`)
    }
</script>

