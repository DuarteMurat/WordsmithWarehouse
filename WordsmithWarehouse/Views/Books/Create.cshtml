@model WordsmithWarehouse.Models.BookViewModel


@{
    ViewData["Title"] = "Create";
}


<h1>Create Book</h1>

<h4>Book</h4>


<hr />

<form asp-action="Create" enctype="multipart/form-data">


    <div class="row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col" style="border-right:inset">
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Subtitle" class="control-label"></label>
                <input asp-for="Subtitle" class="form-control" />
                <span asp-validation-for="Subtitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ISBN" class="control-label"></label>
                <input asp-for="ISBN" class="form-control" />
                <span asp-validation-for="ISBN" class="text-danger"></span>
            </div>
            <div class="form-group">

                <label asp-for="Author" class="control-label"></label>

                <label asp-for="AuthorId" class="control-label"></label>

                <select asp-for="AuthorId" asp-items="Model.Authors" class="form-control"></select>
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>
        </div>
        <div class="col">
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAvailableOnline" /> @Html.DisplayNameFor(model => model.IsAvailableOnline)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAvailablePhysical" /> @Html.DisplayNameFor(model => model.IsAvailablePhysical)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" class="form-control" type="file" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>
            <h4>Tags</h4>

            <div class="row" style="">
                @{
                    for (int i = 0; i < Model.Tags.Count; i++)
                    {
                        <label>
                            &thinsp; @Html.DisplayName(Model.Tags[i].Name)
                            <input asp-for="@Model.Tags[i].isActive" type="checkbox" /> &nbsp; |
                            <input asp-for="@Model.Tags[i].Name" type="hidden" value="@Model.Tags[i].Name " />
                            <input asp-for="@Model.Tags[i].Id" type="hidden" value="@Model.Tags[i].Id " />
                        </label>
                    }
                }
            </div>
        </div>

    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>
<br />


<div>
    <a asp-action="Index" class="btn btn-info">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}


@*<script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            const MainAuthorComboBox = document.getElementById("MainAuthorComboBox");
            const NewAuthorComboBox = document.getElementById("NewAuthorComboBox");

            MainAuthorComboBox.addEventListener("change", function () {
                // Get the selected value from the source combobox
                const selectedValue = MainAuthorComboBox.value;

                // Create a new unrelated combobox
                const newComboBox = document.createElement("select");
                newComboBox.id = "newComboBox";

                if (selectedValue !== "Select an author"){
                    newComboBox.innerHTML = `
                    <option value="newOption1">New Option 1</option>
                    `
                }


                NewAuthorComboBox.innerHTML = "";
                NewAuthorComboBox.appendChild(newComboBox);
        }
</script>*@

@*
>>>>>>> Stashed changes

                <asp-for>@Model.AuthorId</asp-for>
                    <asp-items>@Model.Authors</asp-items>`

                    *@
